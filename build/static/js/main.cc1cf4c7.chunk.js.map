{"version":3,"sources":["containers/LoginContainer/index.tsx","containers/RegisterContainer/index.tsx","screens/AuthScreen/index.tsx","utils/history.ts","containers/TopBarContainer/index.tsx","components/AutoComplite/AutoComplite.tsx","containers/MakeTransactionContainer/index.tsx","utils/userToOption.ts","components/TransactionCard/index.tsx","containers/RecentContainer/index.tsx","screens/MainScreen/index.tsx","App.tsx","serviceWorker.ts","store/api.ts","utils/makeGreet.ts","store/AppStore.ts","utils/throttle.js","index.tsx"],"names":["LoginContainer","inject","observer","state","email","password","handleEmailChange","e","_this","setState","currentTarget","value","handlePasswordChange","handleSubmit","_this$state","props","appStore","signIn","_this$state2","this","react_default","a","createElement","className","Typography_default","variant","index_es","label","required","name","onChange","fullWidth","type","margin","control","color","disabled","signinLoading","onClick","react_router_dom","to","React","Component","RegisterContainer","passwordConfirmation","username","errors","handleChangeUsername","handleChangeEmail","handleChangePassword","handleChangePasswordConfirmation","preventDefault","key","test","length","signUp","onSubmit","error","helperText","signupLoading","AuthScreen","react_router","path","exact","in","timeout","containers_LoginContainer","containers_RegisterContainer","history","createBrowserHistory","TopBarContainer","userMenuOpened","anchorEl","createRef","handleOpenUserMenu","handleCloseUserMenu","loginedUser","isMobile","AppBar_default","position","aria-label","handleHamburgerClick","Menu_default","ref","aria-owns","open","undefined","aria-haspopup","AccountCircle_default","id","current","anchorOrigin","vertical","horizontal","transformOrigin","onClose","logout","AutoComplite","options","find","user","indexOf","react_select_esm","onInputChange","onFilter","classNamePrefix","placeholder","isClearable","MakeTransactionContainer","autoComliteFilter","count","checkCount","newCount","newErros","Object","objectSpread","balance","Boolean","handleChangeCount","Number","setCountToSend","handleChangeUser","param","Array","isArray","userList","usr","setUserToSend","handleChangeUserFilter","setUserFilter","fetchUserListThrottled","handleMakeTransaction","userFilter","tryByFilter","userToSend","countToSend","makeTransaction","amount","toast","_this$props","onCancel","onSend","AutoComplite_AutoComplite_AutoComplite","map","userToOption","inputValue","WrappedTransactionCard","memo","date","handleAgainTransaction","transType","absAmount","Math","abs","style","cursor","tableLayout","width","dayjs","locale","format","overflow","toDate","sortOptions","field","asc","title","filterOptions","RecentContainer","sort","filter","filterIsOpened","sortIsOpened","filterString","recentBody","filterLabel","sortLabel","handleWheelOnBody","assertThisInitialized","scrollBy","deltaY","handleOpenFilter","handleCloseFilter","handleOpenSort","handleCloseSort","_callee","regenerator_default","wrap","_context","prev","next","setDrawerIsOpened","stop","handleSwitchFilter","index","handleSwitchSort","handleChangeFilterString","fetchRecentTransactions","_this2","height","window","innerHeight","offsetTop","recentTransactions","transaction","toLowerCase","t1","t2","field1","unix","field2","sortTransactions","onWheel","concat","sortItem","filterItem","components_TransactionCard","assign","MainScreen","handleOpenMakeTransaction","handleCloseMakeTransaction","drawerIsOpened","containers_TopBarContainer","inline","containers_MakeTransactionContainer","containers_RecentContainer","theme","createMuiTheme","typography","h1","fontSize","lineHeight","fontWeight","fontFamily","h2","h3","h4","h5","protectedRoutes","screens_MainScreen","App","windowHeight","checkIfMobile","addEventListener","checkIfLoginedIn","innerWidth","setIsMobile","react_toastify","styles","isLoggined","from","screens_AuthScreen","location","hostname","match","objToUri","params","keys","k","encodeURIComponent","join","config","api","get","request","method","post","patch","urlParams","token","response","sessionStorage","getItem","axios","headers","Authorization","url","sent","abrupt","makeGreet","hour","trunc","AppStore","action","bound","makeAxiosError","data","observable","_ref2","setItem","id_token","success","handleLoginedInfo","push","t0","_callee2","_ref4","_context2","finish","_callee3","checkOnly","_ref6","_context3","_this3","user_info_token","_callee4","_context4","_this4","_this5","removeItem","_callee5","_ref9","_context5","_this6","_callee6","transactionParam","_ref11","_context6","_this7","trans_token","_callee7","_ref13","_context7","_this8","_this9","_this10","_this11","isOpened","_this12","_this13","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","apply","setTimeout","throttle","fetchUserList","ReactDOM","render","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc1cf4c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './LoginContainer.scss';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { TextField, Button, Checkbox, FormControlLabel, LinearProgress } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport AppStore from '../../store/AppStore';\r\n\r\ninterface ILoginContainerProps {\r\n  appStore?: AppStore;\r\n}\r\n\r\n@inject('appStore')\r\n@observer\r\nclass LoginContainer extends React.Component<ILoginContainerProps> {\r\n  state: { email: string; password: string } = {\r\n    email: 'forwow495800@ya.ru',\r\n    password: '123456',\r\n  };\r\n\r\n  public handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ email: e.currentTarget.value });\r\n  };\r\n\r\n  public handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ password: e.currentTarget.value });\r\n  };\r\n\r\n  public handleSubmit = () => {\r\n    const { email, password } = this.state;\r\n    const appStore = this.props.appStore!;\r\n    appStore.signIn({ email, password });\r\n  };\r\n\r\n  public render() {\r\n    const { email, password } = this.state;\r\n    const appStore = this.props.appStore!;\r\n\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"login-container__head\">\r\n          <Typography variant=\"h1\">Sign in</Typography>\r\n        </div>\r\n        <div className=\"login-container__body\">\r\n          <TextField\r\n            label=\"Email\"\r\n            required\r\n            name=\"email\"\r\n            onChange={this.handleEmailChange}\r\n            value={email}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            margin=\"normal\"\r\n            onChange={this.handlePasswordChange}\r\n            value={password}\r\n            fullWidth\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={appStore.signinLoading}\r\n            onClick={this.handleSubmit}\r\n            fullWidth\r\n          >\r\n            Sign in\r\n          </Button>\r\n          {appStore.signinLoading && <LinearProgress />}\r\n          <div className=\"login-container__register\">\r\n            Have no account yet? <Link to=\"/registration\">Register</Link> first, please.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React from 'react';\r\nimport './RegisterContainer.scss';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { TextField, Button, LinearProgress } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport AppStore from '../../store/AppStore';\r\n\r\ninterface IRegistrationForm {\r\n  email: string;\r\n  password: string;\r\n  passwordConfirmation: string;\r\n  username: string;\r\n  [key: string]: string;\r\n}\r\n\r\ninterface IRegistrationContainerProps {\r\n  appStore?: AppStore;\r\n}\r\n\r\n@inject('appStore')\r\n@observer\r\nclass RegisterContainer extends React.Component<IRegistrationContainerProps> {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    username: '',\r\n    errors: {\r\n      email: '',\r\n      password: '',\r\n      passwordConfirmation: '',\r\n      username: '',\r\n    },\r\n  };\r\n\r\n  public handleChangeUsername = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ username: e.currentTarget.value });\r\n  };\r\n\r\n  public handleChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ email: e.currentTarget.value });\r\n  };\r\n\r\n  public handleChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ password: e.currentTarget.value });\r\n  };\r\n\r\n  public handleChangePasswordConfirmation = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ passwordConfirmation: e.currentTarget.value });\r\n  };\r\n\r\n  public handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const { username, email, password, passwordConfirmation } = this.state;\r\n    const appStore = this.props.appStore!;\r\n    const errors: IRegistrationForm = {\r\n      email: '',\r\n      password: '',\r\n      passwordConfirmation: '',\r\n      username: '',\r\n    };\r\n    const wrongFieldLabel = 'Please check this field';\r\n    /** Валидируем Email */\r\n    const emailRegExp = /\\S+@\\S+\\.\\S+/;\r\n    if (!emailRegExp.test(email)) errors.email = wrongFieldLabel;\r\n    /** Валидируем юзернейм */\r\n    if (username.length === 0) errors.username = wrongFieldLabel;\r\n    /** Валидируем пароль */\r\n    if (password.length < 6) errors.password = '6 symbols atleast';\r\n    if (password !== passwordConfirmation)\r\n      errors.passwordConfirmation = 'Confirmation dont match the password';\r\n    this.setState({ errors });\r\n    for (const key in errors) {\r\n      if (errors[key] !== '') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    appStore.signUp({ username, email, password });\r\n  };\r\n\r\n  public render() {\r\n    const { username, email, password, passwordConfirmation, errors } = this.state;\r\n    const appStore = this.props.appStore!;\r\n    return (\r\n      <div className=\"registration-container\">\r\n        <div className=\"registration-container__head\">\r\n          <Typography variant=\"h1\">Sign up</Typography>\r\n        </div>\r\n        <div className=\"registration-container__body\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              label=\"Email\"\r\n              onChange={this.handleChangeEmail}\r\n              error={!!errors.email}\r\n              helperText={errors.email}\r\n              value={email}\r\n              name=\"email\"\r\n              fullWidth\r\n              required={true}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Username\"\r\n              error={!!errors.username}\r\n              helperText={errors.username}\r\n              onChange={this.handleChangeUsername}\r\n              value={username}\r\n              name=\"username\"\r\n              fullWidth\r\n              required={true}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              error={!!errors.password}\r\n              helperText={errors.password}\r\n              onChange={this.handleChangePassword}\r\n              name=\"password\"\r\n              value={password}\r\n              required={true}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Repeat password\"\r\n              margin=\"dense\"\r\n              type=\"password\"\r\n              error={!!errors.passwordConfirmation}\r\n              helperText={errors.passwordConfirmation}\r\n              onChange={this.handleChangePasswordConfirmation}\r\n              name=\"repeatPassword\"\r\n              value={passwordConfirmation}\r\n              required={true}\r\n              fullWidth\r\n            />\r\n            <div className=\"registration-container__submit\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={appStore.signupLoading}\r\n                fullWidth\r\n              >\r\n                Submit\r\n              </Button>\r\n              {appStore.signupLoading && <LinearProgress />}\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"registration-container__register\">\r\n            Have an account? <Link to=\"/\">Sign in</Link>, please\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterContainer;\r\n","import React from 'react';\r\nimport './AuthScreen.scss';\r\nimport { Paper, Grow } from '@material-ui/core';\r\nimport LoginContainer from '../../containers/LoginContainer';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport RegisterContainer from '../../containers/RegisterContainer';\r\n\r\nclass AuthScreen extends React.Component {\r\n  public render() {\r\n    return (\r\n      <div className=\"auth-screen\">\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Grow in timeout={800}>\r\n                <Paper className=\"auth-screen__login\">\r\n                  <LoginContainer />\r\n                </Paper>\r\n              </Grow>\r\n            </Route>\r\n            <Route path=\"/registration\" exact>\r\n              <Grow in timeout={800}>\r\n                <Paper className=\"auth-screen__registration\">\r\n                  <RegisterContainer />\r\n                </Paper>\r\n              </Grow>\r\n            </Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthScreen;\r\n","import { createBrowserHistory } from 'history';\r\nexport const history = createBrowserHistory();\r\n","import React, { SyntheticEvent } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport './TopBarContainer.scss';\r\nimport { Toolbar, IconButton, Typography, Menu, MenuItem } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { inject, observer } from 'mobx-react';\r\nimport AppStore from '../../store/AppStore';\r\n\r\ninterface ITopBarContainerProps {\r\n  appStore?: AppStore;\r\n  handleHamburgerClick: () => void;\r\n}\r\n\r\ninterface ITopBarContainerState {\r\n  userMenuOpened: boolean;\r\n}\r\n\r\n@inject('appStore')\r\n@observer\r\nclass TopBarContainer extends React.Component<ITopBarContainerProps, ITopBarContainerState> {\r\n  state = { userMenuOpened: false };\r\n  anchorEl = React.createRef<any>();\r\n\r\n  public handleOpenUserMenu = (e: SyntheticEvent) => {\r\n    this.setState({ userMenuOpened: true });\r\n  };\r\n  public handleCloseUserMenu = () => {\r\n    this.setState({ userMenuOpened: false });\r\n  };\r\n\r\n  public render() {\r\n    const appStore = this.props.appStore!;\r\n    const loginedUser = appStore.loginedUser!;\r\n    const { isMobile } = appStore;\r\n    const { anchorEl } = this;\r\n    const { userMenuOpened } = this.state;\r\n    return (\r\n      <AppBar position=\"static\" className=\"top-bar-container\">\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={this.props.handleHamburgerClick}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className=\"top-bar-container__title\">\r\n            {isMobile ? 'PW💸' : 'Parrot Wings💸'}\r\n          </Typography>\r\n          <div className=\"top-bar-container__user-group\">\r\n            {loginedUser.name}\r\n            <div ref={this.anchorEl}>\r\n              <IconButton\r\n                onClick={this.handleOpenUserMenu}\r\n                aria-owns={open ? 'menu-appbar' : undefined}\r\n                aria-haspopup=\"true\"\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n            </div>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={this.anchorEl.current}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={userMenuOpened}\r\n              onClose={this.handleCloseUserMenu}\r\n            >\r\n              <MenuItem onClick={appStore.logout}>Logout</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBarContainer;\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\nimport './AutoComplite.scss';\r\nimport { ValueType } from 'react-select/lib/types';\r\n\r\ninterface IAutoCompliteProps {\r\n  onFilter: (label: string) => void;\r\n  onChange: (value: ValueType<{ label: string; value: number }>) => void;\r\n  options: { label: string; value: number }[];\r\n  inputValue: string;\r\n  current: string;\r\n}\r\n\r\nexport const AutoComplite = (props: IAutoCompliteProps) => {\r\n  const { current } = props;\r\n  const value = current ? props.options.find(user => user.label.indexOf(current) !== -1) : null;\r\n  return (\r\n    <Select\r\n      //  inputValue={props.inputValue}\r\n      value={value}\r\n      onChange={props.onChange}\r\n      onInputChange={props.onFilter}\r\n      className=\"auto-complite-container\"\r\n      classNamePrefix=\"auto-complite\"\r\n      options={props.options}\r\n      placeholder=\"Choose the recipient\"\r\n      isClearable\r\n    />\r\n  );\r\n};\r\n","import React, { FormEvent } from 'react';\r\nimport { Typography, TextField, Button } from '@material-ui/core';\r\nimport './MakeTransactionContainer.scss';\r\nimport { AutoComplite } from '../../components/AutoComplite/AutoComplite';\r\nimport { inject, observer } from 'mobx-react';\r\nimport AppStore from '../../store/AppStore';\r\nimport { userToOption } from '../../utils/userToOption';\r\nimport { toast } from 'react-toastify';\r\nimport { ValueType } from 'react-select/lib/types';\r\n\r\ninterface IMakeTransactionContainerProps {\r\n  onCancel: () => void;\r\n  onSend: (params: { id: number; count: number }) => void;\r\n  appStore?: AppStore;\r\n}\r\n\r\ninterface IMakeTransactionContainerState {\r\n  autoComliteFilter: string;\r\n  errors: {\r\n    count: string;\r\n    user: string;\r\n  };\r\n}\r\n\r\n@inject('appStore')\r\n@observer\r\nclass MakeTransactionContainer extends React.Component<\r\nIMakeTransactionContainerProps,\r\nIMakeTransactionContainerState\r\n> {\r\n  state = { autoComliteFilter: '', count: 0, errors: { count: '', user: '' } };\r\n\r\n  public checkCount = (newCount: number) => {\r\n    const { errors } = this.state;\r\n    let newErros = { ...errors, count: '' };\r\n    const loginedUser = this.props.appStore!.loginedUser!;\r\n    if (loginedUser.balance === 0) newErros = { ...errors, count: 'Your balance is empty' };\r\n    if (newCount === 0) newErros = { ...errors, count: 'Count is empty' };\r\n    if (newCount > loginedUser.balance) newErros = { ...errors, count: 'Not enough PW' };\r\n    this.setState({ errors: newErros });\r\n    return Boolean(!newErros.count);\r\n  };\r\n\r\n  public handleChangeCount = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const appStore = this.props.appStore!;\r\n    const newCount = Number(e.currentTarget.value);\r\n    this.checkCount(newCount);\r\n    appStore.setCountToSend(newCount);\r\n  };\r\n\r\n  public handleChangeUser = (param: ValueType<{ label: string; value: number }>) => {\r\n    const appStore = this.props.appStore!;\r\n    if (param && !Array.isArray(param)) {\r\n      const user = appStore.userList.find(usr => usr.id === param.value);\r\n      if (!user) {\r\n        appStore.setUserToSend('');\r\n        return;\r\n      }\r\n      appStore.setUserToSend(user.name);\r\n    } else {\r\n      appStore.setUserToSend('');\r\n    }\r\n  };\r\n\r\n  public handleChangeUserFilter = (label: string) => {\r\n    if (label !== '') {\r\n      const appStore = this.props.appStore!;\r\n      appStore.setUserFilter(label);\r\n      appStore.fetchUserListThrottled(label);\r\n      appStore.setUserToSend('');\r\n    }\r\n  };\r\n\r\n  public handleMakeTransaction = () => {\r\n    const appStore = this.props.appStore!;\r\n    const { userFilter } = appStore;\r\n    const tryByFilter = appStore.userList.find(user => user.name === userFilter);\r\n    const userToSend = appStore.userToSend ? appStore.userToSend : tryByFilter && tryByFilter.name;\r\n    if (!userToSend) {\r\n      toast.error('Choose the recipient please!');\r\n      return;\r\n    }\r\n    const valid = this.checkCount(appStore.countToSend);\r\n    if (valid) {\r\n      appStore.makeTransaction({ name: userToSend, amount: appStore.countToSend });\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const { onCancel, onSend } = this.props;\r\n    const { autoComliteFilter, errors } = this.state;\r\n    const appStore = this.props.appStore!;\r\n    const count = appStore.countToSend;\r\n    const { userList } = appStore;\r\n    return (\r\n      <div className=\"make-transaction-container\">\r\n        <div className=\"make-transaction-container__body\">\r\n          <Typography variant=\"h1\">Make transaction</Typography>\r\n          <div className=\"make-transaction-container__description\">\r\n            <Typography variant=\"subheading\">\r\n              Choose recipient and insert count of PW to send\r\n            </Typography>\r\n          </div>\r\n\r\n          <AutoComplite\r\n            onFilter={this.handleChangeUserFilter}\r\n            onChange={this.handleChangeUser}\r\n            options={userList.map(user => userToOption(user))}\r\n            current={appStore.userToSend}\r\n            inputValue={appStore.userFilter}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            label=\"Count\"\r\n            required\r\n            name=\"count\"\r\n            type=\"number\"\r\n            onChange={this.handleChangeCount}\r\n            error={Boolean(errors.count)}\r\n            helperText={errors.count}\r\n            value={count}\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className=\"make-transaction-container__footer\">\r\n          <Button color=\"primary\" onClick={onCancel}>\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" onClick={this.handleMakeTransaction}>\r\n            Accept\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MakeTransactionContainer;\r\n","import { IFiltredUser } from '../module';\r\n\r\nexport const userToOption = (user: IFiltredUser) => ({ label: user.name, value: user.id });\r\n","import React, { memo } from 'react';\r\nimport { ITransactionItem } from '../../module';\r\nimport './TransactionCard.scss';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  Link,\r\n} from '@material-ui/core';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/en'; // load on demand\r\n\r\ninterface ITransactionCardProps extends ITransactionItem {\r\n  handleAgainTransaction: (username: string, amount: number) => void;\r\n}\r\n\r\nconst TransactionCard = (props: ITransactionCardProps) => {\r\n  const { username, balance, amount, date, handleAgainTransaction } = props;\r\n  const transType = amount > 0 ? 'Incoming' : 'Outcoming';\r\n  const absAmount = Math.abs(amount);\r\n  const handleAgain = () => {\r\n    handleAgainTransaction(username, amount);\r\n  };\r\n  return (\r\n    <Paper className=\"transaction-card\">\r\n      <div className=\"transaction-card__head\">\r\n        <Typography variant=\"h2\">{transType}</Typography>\r\n        <Link style={{ cursor: 'pointer' }} onClick={handleAgain}>\r\n          again\r\n        </Link>\r\n      </div>\r\n\r\n      <Divider />\r\n      <Table style={{ tableLayout: 'fixed' }}>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell style={{ width: '10px' }}>Date:</TableCell>\r\n            <TableCell>\r\n              {dayjs(date)\r\n                .locale('en')\r\n                .format('DD.MM.YY HH:mm')}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Amount</TableCell>\r\n            <TableCell>{absAmount}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{transType === 'Incoming' ? 'Sender' : 'Recipient'}</TableCell>\r\n            <TableCell style={{ overflow: 'hidden' }}>{username}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Balance</TableCell>\r\n            <TableCell>{balance}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst WrappedTransactionCard = memo(TransactionCard);\r\n\r\nexport default WrappedTransactionCard;\r\n","import React from 'react';\r\nimport './RecentContainer.scss';\r\nimport { Typography, Link, Input, Menu, MenuItem } from '@material-ui/core';\r\nimport { inject, observer } from 'mobx-react';\r\nimport AppStore from '../../store/AppStore';\r\nimport TransactionCard from '../../components/TransactionCard';\r\nimport 'dayjs/locale/en';\r\nimport dayjs from 'dayjs';\r\nimport { ITransactionItem } from '../../module';\r\n\r\nconst toDate = (date: string) => {\r\n  return dayjs(date)\r\n    .locale('en')\r\n    .format('DD.MM.YYYY');\r\n};\r\n\r\nconst sortTransactions = (t1: ITransactionItem, t2: ITransactionItem, sort: ISortMenuItem) => {\r\n  const { field } = sort;\r\n  const field1 = sort.field === 'date' ? dayjs(t1.date).unix() : t1[field];\r\n  const field2 = sort.field === 'date' ? dayjs(t2.date).unix() : t2[field];\r\n  if (sort.asc) {\r\n    return field1 < field2 ? -1 : field1 > field2 ? 1 : 0;\r\n  } else {\r\n    return field1 < field2 ? 1 : field1 > field2 ? -1 : 0;\r\n  }\r\n};\r\n\r\ninterface IRecentContainerProps {\r\n  appStore?: AppStore;\r\n}\r\n\r\ninterface IFilterMenuItem {\r\n  field: string;\r\n  title: string;\r\n}\r\n\r\ninterface ISortMenuItem {\r\n  field: string;\r\n  asc: boolean;\r\n  title: string;\r\n}\r\n\r\ninterface IRecentContainerState {\r\n  filter: IFilterMenuItem;\r\n  sort: ISortMenuItem;\r\n  filterIsOpened: boolean;\r\n  sortIsOpened: boolean;\r\n  filterString: string;\r\n}\r\n\r\nconst sortOptions = [\r\n  { field: 'username', asc: false, title: 'Username (desc)' },\r\n  { field: 'username', asc: true, title: 'Username (asc)' },\r\n  { field: 'amount', asc: false, title: 'Amount (desc)' },\r\n  { field: 'amount', asc: true, title: 'Amount (asc)' },\r\n  { field: 'date', asc: false, title: 'Date (desc)' },\r\n  { field: 'date', asc: true, title: 'Date (asc)' },\r\n];\r\n\r\nconst filterOptions = [\r\n  { field: 'username', title: 'Username' },\r\n  { field: 'amount', title: 'Amount' },\r\n  { field: 'date', title: 'Date' },\r\n];\r\n\r\n@inject('appStore')\r\n@observer\r\nclass RecentContainer extends React.Component<IRecentContainerProps, IRecentContainerState> {\r\n  state = {\r\n    sort: { field: 'date', asc: false, title: '↓ Date' },\r\n    filter: { field: 'date', title: 'Date' },\r\n    filterIsOpened: false,\r\n    sortIsOpened: false,\r\n    filterString: '',\r\n  };\r\n  recentBody = React.createRef<HTMLDivElement>();\r\n  filterLabel = React.createRef<HTMLDivElement>();\r\n  sortLabel = React.createRef<HTMLDivElement>();\r\n\r\n  public componentDidMount() {\r\n    const appStore = this.props.appStore!;\r\n    appStore.fetchRecentTransactions();\r\n  }\r\n\r\n  public handleWheelOnBody = (e: React.WheelEvent<HTMLElement>) => {\r\n    const { recentBody } = this;\r\n    recentBody.current!.scrollBy(e.deltaY, 0);\r\n  };\r\n\r\n  public handleOpenFilter = () => {\r\n    this.setState({ filterIsOpened: true });\r\n  };\r\n\r\n  public handleCloseFilter = () => {\r\n    this.setState({ filterIsOpened: false });\r\n  };\r\n\r\n  public handleOpenSort = () => {\r\n    this.setState({ sortIsOpened: true });\r\n  };\r\n\r\n  public handleCloseSort = () => {\r\n    this.setState({ sortIsOpened: false });\r\n  };\r\n\r\n  public handleAgainTransaction = async (username: string, amount: number) => {\r\n    const appStore = this.props.appStore!;\r\n    await appStore.fetchUserListThrottled(username);\r\n    appStore.setCountToSend(amount);\r\n    appStore.setUserToSend(username);\r\n    appStore.setDrawerIsOpened(true);\r\n  };\r\n\r\n  public handleSwitchFilter = (index: number) => {\r\n    this.setState({ filter: filterOptions[index] });\r\n    this.handleCloseFilter();\r\n  };\r\n\r\n  public handleSwitchSort = (index: number) => {\r\n    this.setState({ sort: sortOptions[index] });\r\n    this.handleCloseSort();\r\n  };\r\n\r\n  public handleChangeFilterString = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ filterString: e.currentTarget.value });\r\n  };\r\n\r\n  public render() {\r\n    const appStore = this.props.appStore!;\r\n    const { recentBody } = this;\r\n    const { filter, filterIsOpened, sortIsOpened, filterString, sort } = this.state;\r\n    const height = recentBody.current ? window.innerHeight - recentBody.current.offsetTop : '0px';\r\n    //* Фильтрация и сортировка списка транзакций */\r\n    const recentTransactions = appStore.recentTransactions\r\n      .filter(transaction => {\r\n        if (!filterString) return true;\r\n        switch (filter.field) {\r\n          case 'date': {\r\n            return toDate(transaction.date) === toDate(filterString);\r\n          }\r\n          case 'amount': {\r\n            return Math.abs(transaction.amount) === Number(filterString);\r\n          }\r\n          default: {\r\n            return transaction.username.toLowerCase().indexOf(filterString.toLowerCase()) !== -1;\r\n          }\r\n        }\r\n      })\r\n      .sort((t1, t2) => {\r\n        return sortTransactions(t1, t2, sort);\r\n      });\r\n    return (\r\n      <div className=\"recent-container\">\r\n        <div\r\n          className=\"recent-container__body pretty-scroll\"\r\n          ref={recentBody}\r\n          onWheel={this.handleWheelOnBody}\r\n          style={{ height }}\r\n        >\r\n          <div className=\"recent-container__head\">\r\n            <Typography variant={appStore.isMobile ? 'h2' : 'h1'}>Recent transactions</Typography>\r\n\r\n            <div className=\"recent-container__sorts\">\r\n              Order by\r\n              <div className=\"recent-container__filter-choose\" ref={this.sortLabel}>\r\n                <Link style={{ cursor: 'pointer' }} onClick={this.handleOpenSort}>{` ${\r\n                  sort.title\r\n                } `}</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"recent-container__filters\">\r\n              Filter by\r\n              <div className=\"recent-container__filter-choose\" ref={this.filterLabel}>\r\n                <Link style={{ cursor: 'pointer' }} onClick={this.handleOpenFilter}>{` ${\r\n                  filter.title\r\n                } `}</Link>\r\n              </div>\r\n              <Input\r\n                style={{ width: '150px' }}\r\n                onChange={this.handleChangeFilterString}\r\n                type={filter.field === 'date' ? 'date' : 'text'}\r\n              />\r\n              <Menu\r\n                id=\"sortMenu\"\r\n                anchorEl={this.sortLabel!.current}\r\n                open={sortIsOpened}\r\n                onClose={this.handleCloseSort}\r\n              >\r\n                {sortOptions.map((sortItem, index) => {\r\n                  const handleChoose = () => {\r\n                    this.handleSwitchSort(index);\r\n                  };\r\n                  return (\r\n                    <MenuItem key={`sortOptions_${index}`} onClick={handleChoose}>\r\n                      {sortItem.title}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Menu>\r\n              <Menu\r\n                id=\"filterMenu\"\r\n                anchorEl={this.filterLabel!.current}\r\n                open={filterIsOpened}\r\n                onClose={this.handleCloseFilter}\r\n              >\r\n                {filterOptions.map((filterItem, index) => {\r\n                  const handleChoose = () => {\r\n                    this.handleSwitchFilter(index);\r\n                  };\r\n                  return (\r\n                    <MenuItem key={`sortOptions_${index}`} onClick={handleChoose}>\r\n                      {filterItem.title}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n          <div className=\"recent-container__card-list\">\r\n            {recentTransactions.map(transaction => (\r\n              <TransactionCard\r\n                key={`transaction_${transaction.id}`}\r\n                {...transaction}\r\n                handleAgainTransaction={this.handleAgainTransaction}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecentContainer;\r\n","import React from 'react';\r\nimport './MainScreen.scss';\r\nimport TopBarContainer from '../../containers/TopBarContainer';\r\nimport { inject, observer } from 'mobx-react';\r\nimport AppStore from '../../store/AppStore';\r\nimport { Drawer, Typography } from '@material-ui/core';\r\nimport MakeTransactionContainer from '../../containers/MakeTransactionContainer';\r\nimport RecentContainer from '../../containers/RecentContainer';\r\n\r\ninterface IMainScreenProps {\r\n  appStore?: AppStore;\r\n}\r\n\r\ninterface IMainScreenState {}\r\n\r\n@inject('appStore')\r\n@observer\r\nclass MainScreen extends React.Component<IMainScreenProps, IMainScreenState> {\r\n  public handleOpenMakeTransaction = () => {\r\n    const appStore = this.props.appStore!;\r\n    appStore.setDrawerIsOpened(true);\r\n  };\r\n\r\n  public handleCloseMakeTransaction = () => {\r\n    const appStore = this.props.appStore!;\r\n    appStore.setDrawerIsOpened(false);\r\n  };\r\n\r\n  public render() {\r\n    const appStore = this.props.appStore!;\r\n    const { drawerIsOpened } = appStore;\r\n    const loginedUser = appStore.loginedUser!;\r\n    return (\r\n      <div className=\"main-screen\">\r\n        <div className=\"main-screen__head\">\r\n          <TopBarContainer handleHamburgerClick={this.handleOpenMakeTransaction} />\r\n          <div className=\"main-screen__subhead\">\r\n            <Typography inline variant=\"h4\">\r\n              Current balance:\r\n              <Typography inline color=\"primary\">\r\n                {` ${loginedUser.balance} `}\r\n              </Typography>\r\n              PW\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <Drawer open={drawerIsOpened} onClose={this.handleCloseMakeTransaction}>\r\n          <MakeTransactionContainer\r\n            onCancel={this.handleCloseMakeTransaction}\r\n            onSend={this.handleCloseMakeTransaction}\r\n          />\r\n        </Drawer>\r\n        <RecentContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainScreen;\r\n","import React, { Component } from 'react';\nimport AuthScreen from './screens/AuthScreen';\nimport dayjs from 'dayjs';\nimport './App.scss';\nimport { createMuiTheme, MuiThemeProvider, Snackbar } from '@material-ui/core';\nimport { Route, Switch, Router, Redirect } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport AppStore from './store/AppStore';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { history } from './utils/history';\nimport MainScreen from './screens/MainScreen';\ndayjs.locale('ru');\n\nconst theme = createMuiTheme({\n  typography: {\n    h1: {\n      fontSize: 24,\n      lineHeight: '36px',\n      fontWeight: 400,\n      fontFamily: 'Roboto',\n    },\n    h2: {\n      fontSize: 20,\n\n      fontFamily: 'Roboto',\n    },\n    h3: {\n      fontSize: 18,\n      fontFamily: 'Roboto',\n    },\n    h4: {\n      fontSize: 16,\n      fontFamily: 'Roboto',\n    },\n    h5: {\n      fontSize: 14,\n      fontFamily: 'Roboto',\n    },\n  },\n});\n\nconst protectedRoutes = [\n  <Route path=\"/list\" exact key={0}>\n    <MainScreen />\n  </Route>,\n];\n\ninterface IAppProps {\n  appStore?: AppStore;\n}\n\n@inject('appStore')\n@observer\nclass App extends Component<IAppProps> {\n  state = { windowHeight: window.innerHeight };\n\n  public componentDidMount() {\n    this.checkIfMobile();\n    window.addEventListener('resize', () => {\n      this.setState({ windowHeight: window.innerHeight });\n      this.checkIfMobile();\n    });\n    this.props.appStore!.checkIfLoginedIn();\n  }\n\n  public checkIfMobile() {\n    const appStore = this.props.appStore!;\n    if (window.innerWidth < 768) appStore.setIsMobile(true);\n    else appStore.setIsMobile(false);\n  }\n\n  public render() {\n    const { windowHeight } = this.state;\n    const appStore = this.props.appStore!;\n    const style: React.CSSProperties = {\n      height: windowHeight,\n    };\n    return (\n      <div className=\"app\" style={style}>\n        <ToastContainer />\n        <MuiThemeProvider theme={theme}>\n          <Router history={history}>\n            <Switch>\n              {appStore.isLoggined ? protectedRoutes : <Redirect from=\"/list\" to=\"/\" />}\n              <Route path=\"/\">\n                <AuthScreen />\n              </Route>\n            </Switch>\n          </Router>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\r\n\r\ninterface IRequestParams {\r\n  url: string;\r\n  data?: any;\r\n  urlParams?: any;\r\n}\r\n\r\ninterface IRequestParamsWithMethod extends IRequestParams {\r\n  method: 'post' | 'get' | 'patch';\r\n}\r\n\r\nconst objToUri = (params: any) =>\r\n  Object.keys(params)\r\n    .map(k => {\r\n      return encodeURIComponent(k) + '=' + encodeURIComponent(params[k]);\r\n    })\r\n    .join('&');\r\n\r\n//* Можно вынести в переменные окружения или куда вообще нужно\r\nconst config = { API_URL: 'http://193.124.114.46:3001' };\r\n\r\nclass Api {\r\n  public get = (params: IRequestParams) => {\r\n    return this.request({ ...params, method: 'get' });\r\n  };\r\n  public post = (params: IRequestParams) => {\r\n    return this.request({ ...params, method: 'post' });\r\n  };\r\n\r\n  public patch = (params: IRequestParams) => {\r\n    return this.request({ ...params, method: 'patch' });\r\n  };\r\n\r\n  public request = async (params: IRequestParamsWithMethod) => {\r\n    const urlParams = params.urlParams ? `/?${objToUri(params.urlParams)}` : '';\r\n    const token = sessionStorage.getItem('id_token');\r\n    const response = await axios({\r\n      ...params,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      url: `${config.API_URL}/${params.url}${urlParams}`,\r\n    });\r\n    return response;\r\n  };\r\n}\r\nexport const api = new Api();\r\n","import dayjs from \"dayjs\";\r\n\r\nexport const makeGreet = (): string => {\r\n  const hour = dayjs().hour();\r\n  switch (Math.trunc(hour / 6)) {\r\n    case 1:\r\n      return \"🎉 Good morning\";\r\n    case 2:\r\n      return \"🌞 Good afternoon\";\r\n    case 3:\r\n      return \"🌙 Good evening\";\r\n    default:\r\n      return \"✌ Greetings\";\r\n  }\r\n};\r\n","import { observable, action } from 'mobx';\r\nimport {\r\n  IUserSignupParams,\r\n  IUserSigninParams,\r\n  IUser,\r\n  IFiltredUser,\r\n  IMakeTransactionItem,\r\n  ITransactionItem,\r\n} from '../module';\r\nimport { api } from './api';\r\nimport { toast } from 'react-toastify';\r\nimport { AxiosResponse } from 'axios';\r\nimport { makeGreet } from '../utils/makeGreet';\r\nimport { history } from '../utils/history';\r\nimport { throttle } from '../utils/throttle';\r\n\r\nexport default class AppStore {\r\n  @observable\r\n  public userFilter: string = '';\r\n  @observable\r\n  public userToSend: string = '';\r\n  @observable\r\n  public countToSend: number = 0;\r\n  @observable\r\n  public signupLoading = false;\r\n  @observable\r\n  public signinLoading = false;\r\n  @observable\r\n  public isMobile = false;\r\n  @observable\r\n  public drawerIsOpened = false;\r\n  @observable\r\n  public loginedUser?: IUser;\r\n  @observable\r\n  public isLoggined = false;\r\n  @observable\r\n  public userList: IFiltredUser[] = [];\r\n  @observable\r\n  public recentTransactions: ITransactionItem[] = [];\r\n\r\n  private makeAxiosError = (e: any) => {\r\n    const response: AxiosResponse = e.response;\r\n    toast.error(response.data);\r\n  };\r\n\r\n  @action\r\n  public signUp = async (params: IUserSignupParams) => {\r\n    try {\r\n      const { data } = await api.post({ url: 'users', data: params });\r\n      sessionStorage.setItem('id_token', data.id_token);\r\n      toast.success(\"Signed up successfully! You'll be Logined in in few seconds\");\r\n      await this.handleLoginedInfo();\r\n      history.push('/list');\r\n    } catch (e) {\r\n      this.makeAxiosError(e);\r\n    }\r\n  };\r\n\r\n  @action\r\n  public signIn = async (params: IUserSigninParams) => {\r\n    try {\r\n      this.signinLoading = true;\r\n      const { data } = await api.post({ url: 'sessions/create', data: params });\r\n      sessionStorage.setItem('id_token', data.id_token);\r\n      await this.handleLoginedInfo();\r\n      history.push('/list');\r\n    } catch (e) {\r\n      this.makeAxiosError(e);\r\n    } finally {\r\n      this.signinLoading = false;\r\n    }\r\n  };\r\n\r\n  @action handleLoginedInfo = async (checkOnly?: boolean) => {\r\n    try {\r\n      const { data } = await api.get({ url: 'api/protected/user-info' });\r\n      this.loginedUser = data.user_info_token;\r\n      this.isLoggined = true;\r\n      if (!checkOnly) toast.success(`${makeGreet()}`);\r\n      return true;\r\n    } catch (e) {\r\n      if (!checkOnly) this.makeAxiosError(e);\r\n      history.push('/');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  @action\r\n  public checkIfLoginedIn = async () => {\r\n    const loggined = await this.handleLoginedInfo(true);\r\n    if (!loggined) return;\r\n    history.push('/list');\r\n  };\r\n\r\n  @action\r\n  public logout = () => {\r\n    this.isLoggined = false;\r\n    sessionStorage.removeItem('id_token');\r\n    history.push('/');\r\n  };\r\n\r\n  @action\r\n  public fetchUserList = async (filter: string) => {\r\n    if (!filter) return;\r\n    try {\r\n      const { data } = await api.post({ url: 'api/protected/users/list', data: { filter } });\r\n      this.userList = data;\r\n    } catch (e) {\r\n      this.makeAxiosError(e);\r\n    }\r\n  };\r\n\r\n  @action\r\n  public makeTransaction = async (transactionParam: IMakeTransactionItem) => {\r\n    try {\r\n      const { data } = await api.post({\r\n        url: 'api/protected/transactions',\r\n        data: transactionParam,\r\n      });\r\n      this.handleLoginedInfo(true);\r\n      toast.success(`Transaction done: ${Math.abs(data.trans_token.amount)} pw sent`);\r\n      this.fetchRecentTransactions();\r\n      this.setDrawerIsOpened(false);\r\n    } catch (e) {\r\n      this.makeAxiosError(e);\r\n    }\r\n  };\r\n\r\n  @action fetchRecentTransactions = async () => {\r\n    try {\r\n      const { data } = await api.get({ url: 'api/protected/transactions' });\r\n      if (!(data.trans_token instanceof Array)) throw 'Array of transaction is invalid!';\r\n      this.recentTransactions = data.trans_token;\r\n    } catch (e) {\r\n      this.makeAxiosError(e);\r\n    }\r\n  };\r\n\r\n  @action\r\n  public setUserToSend = (userToSend: string) => {\r\n    this.userToSend = userToSend;\r\n  };\r\n\r\n  @action\r\n  public setCountToSend = (countToSend: number) => {\r\n    this.countToSend = Math.abs(countToSend);\r\n  };\r\n\r\n  @action.bound\r\n  public setIsMobile = (isMobile: boolean) => {\r\n    this.isMobile = isMobile;\r\n  };\r\n\r\n  @action\r\n  public setDrawerIsOpened = (isOpened: boolean) => {\r\n    this.drawerIsOpened = isOpened;\r\n  };\r\n\r\n  @action\r\n  public setUserFilter = (userFilter: string) => {\r\n    this.userFilter = userFilter;\r\n  };\r\n\r\n  //Данный метод \"тормозится\", чтобы не спамить на сервер запросами на воод каждого символа\r\n  @action.bound\r\n  public fetchUserListThrottled = throttle(this.fetchUserList, 2000);\r\n}\r\n","export function throttle(func, ms) {\r\n  var isThrottled = false,\r\n    savedArgs,\r\n    savedThis;\r\n\r\n  function wrapper() {\r\n    if (isThrottled) {\r\n      savedArgs = arguments;\r\n      savedThis = this;\r\n      return;\r\n    }\r\n\r\n    func.apply(this, arguments);\r\n\r\n    isThrottled = true;\r\n\r\n    setTimeout(function() {\r\n      isThrottled = false;\r\n      if (savedArgs) {\r\n        wrapper.apply(savedThis, savedArgs);\r\n        savedArgs = savedThis = null;\r\n      }\r\n    }, ms);\r\n  }\r\n\r\n  return wrapper;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"mobx-react\";\nimport AppStore from \"./store/AppStore\";\n\nReactDOM.render(\n  <Provider appStore={new AppStore()}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}